
1. 일반 메소드 생성 - static
- 문자열타입 값을 전달 받아 모든 공백을 제거 후 리턴해주는 메소드를 생성한다.
- 메소드명은 임의로 한다.
- 예) 우리 모두의 백과 사전 -> 우리모두의백과사전

 

 


2. 일반 메소드 생성 - static
- 실수타입 값을 전달 받아 정수부와 실수부를 분리하여 출력하는 메소드를 생성한다.
- 메소드명은 임의로 한다.
- 예) 97.123  ->  정수:97 / 실수:0.123

 


3. 일반 메소드 생성 - static
- 배열 값을 전달 받아 평균/최고값/최저값을 출력하는 메소드를 생성한다.
- 메소드명은 임의로 한다.
- 예) {10,20,30,40}  ->  평균:25 / 최고:40 / 최저:10

 

 

 

 

4. 생성자를 통해 변수값 세팅 후 정보를 출력한다.

 

Student  st1 = new Student('김호동','2004/02/17','나래고등학교');

Student  st1 = new Student('강민수','2005/07/22','삼한고등학교');

 

(출력내용)

이름:김호동 , 나이:18세 , 나래고등학교

이름:강민수, 나이:17세 , 삼한고등학교

 

 


5. 은행계좌 관리

 (1) 암호를 입력해주세요. >>
     - 실패 시 반복 질문
 (2) 다음 서비스를 선택하세요.
    1. 입금
    2. 출금
    3. 잔액
    * 번호선택>>
    
    경우1)
    * 번호선택>>1
    * 입금액>>50000
    # 50000원 입금되었습니다.
    # 잔액 250000원입니다.

    경우2)
    * 번호선택>>2
    * 출금액>>50000
    # 50000원 출금되었습니다.
    # 잔액 200000원입니다.

    경우3)
    * 번호선택>>3
    # 잔액 250000원입니다.

 =============================


(1) 인터페이스 파일 생성 
interface BankService {
    public void moneyInput(int money);
    public void moneyOutput(int money);
    public void moneyPrint();
}

(2) 구현 클래스 생성

인터페이스 파일 상속 및 매소드 오버라이딩

변수의 get/set 매소드 생성

 

BankServiceImpl  

        private int money;

 

(3) 사용자 클래스 생성

BankController 

    객체생성 후 실행